CREATE TABLE Users
(
	user_id INT(10) UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
	email VARCHAR(35),
	password VARCHAR(15),
	user_type VARCHAR(15),
	fName VARCHAR(20),
	lName VARCHAR(20),
	address VARCHAR(100),
	zip SMALLINT,
	phone VARCHAR(15),
	isMale BOOLEAN
);

CREATE TABLE Volunteers
( 	
	Volunteer_id INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
	affiliation CHAR(20),
	canPickUp BOOLEAN,
	canHomeShare BOOLEAN, 
	passengers SMALLINT UNSIGNED,
	suitcases SMALLINT UNSIGNED,
	beginHomeShare DATETIME,
	endHomeShare DATETIME,
    	CONSTRAINT uid_FK FOREIGN KEY(user_id) REFERENCES Users(user_id)
);

CREATE TABLE Contacts
(
	Contact_id INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
	isVolunteer BOOLEAN,
	contactName VARCHAR(50),
	contactPhone VARCHAR(15),
	contactRelation VARCHAR(30),
	CONSTRAINT cuid_FK FOREIGN KEY(Contact_id) REFERENCES Users(user_id)
);

CREATE TABLE VolAvailables
( 	
	Avail_id INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
	beginTime DATETIME,
	endTime DATETIME,
	filled BOOLEAN,
	CONSTRAINT vavailid_FK FOREIGN KEY(Avail_id) REFERENCES Volunteers(Volunteer_id)
);

CREATE TABLE Students
(
	Student_id INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
	affiliation VARCHAR(20),
	needPickUp BOOLEAN,
	needHomeShare BOOLEAN,
	beginHomeShare DATETIME,
	endHomeShare DATETIME,
	airline VARCHAR(25),
	flightNumber VARCHAR(25),
	arrivalTime DATETIME,
	CONSTRAINT stuid_FK FOREIGN KEY(Student_id) REFERENCES Users(user_id)
);

CREATE TABLE PickUps
(
	PickUp_id INT UNSIGNED NOT NULL,
	Student_id INT(10) UNSIGNED NOT NULL,
	Volunteer_id INT(10) UNSIGNED NOT NULL,
	date DATETIME,
    	CONSTRAINT stupickid_FK FOREIGN KEY(Student_id) REFERENCES Students(Student_id),
    	CONSTRAINT volpickid_FK FOREIGN KEY(Volunteer_id) REFERENCES Volunteers(Volunteer_id)
);

CREATE TABLE HomeShares
(
	HomeShare_id INT UNSIGNED NOT NULL PRIMARY KEY,
	Student_id INT(10) UNSIGNED NOT NULL,
	Volunteer_id INT(10) UNSIGNED NOT NULL,
    	CONSTRAINT stuhomeid_FK FOREIGN KEY(Student_id) REFERENCES Students(Student_id),
    	CONSTRAINT volhomeid_FK FOREIGN KEY(Volunteer_id) REFERENCES Volunteers(Volunteer_id)
);
